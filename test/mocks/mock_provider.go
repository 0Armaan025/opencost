// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kubecost/cost-model/cloud (interfaces: Provider)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	cloud "github.com/kubecost/cost-model/cloud"
	url "net/url"
	reflect "reflect"
)

// MockProvider is a mock of Provider interface
type MockProvider struct {
	ctrl     *gomock.Controller
	recorder *MockProviderMockRecorder
}

// MockProviderMockRecorder is the mock recorder for MockProvider
type MockProviderMockRecorder struct {
	mock *MockProvider
}

// NewMockProvider creates a new mock instance
func NewMockProvider(ctrl *gomock.Controller) *MockProvider {
	mock := &MockProvider{ctrl: ctrl}
	mock.recorder = &MockProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockProvider) EXPECT() *MockProviderMockRecorder {
	return m.recorder
}

// AddServiceKey mocks base method
func (m *MockProvider) AddServiceKey(arg0 url.Values) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddServiceKey", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddServiceKey indicates an expected call of AddServiceKey
func (mr *MockProviderMockRecorder) AddServiceKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddServiceKey", reflect.TypeOf((*MockProvider)(nil).AddServiceKey), arg0)
}

// AllNodePricing mocks base method
func (m *MockProvider) AllNodePricing() (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AllNodePricing")
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AllNodePricing indicates an expected call of AllNodePricing
func (mr *MockProviderMockRecorder) AllNodePricing() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllNodePricing", reflect.TypeOf((*MockProvider)(nil).AllNodePricing))
}

// ClusterName mocks base method
func (m *MockProvider) ClusterName() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClusterName")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClusterName indicates an expected call of ClusterName
func (mr *MockProviderMockRecorder) ClusterName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClusterName", reflect.TypeOf((*MockProvider)(nil).ClusterName))
}

// DownloadPricingData mocks base method
func (m *MockProvider) DownloadPricingData() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DownloadPricingData")
	ret0, _ := ret[0].(error)
	return ret0
}

// DownloadPricingData indicates an expected call of DownloadPricingData
func (mr *MockProviderMockRecorder) DownloadPricingData() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DownloadPricingData", reflect.TypeOf((*MockProvider)(nil).DownloadPricingData))
}

// GetDisks mocks base method
func (m *MockProvider) GetDisks() ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDisks")
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetDisks indicates an expected call of GetDisks
func (mr *MockProviderMockRecorder) GetDisks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDisks", reflect.TypeOf((*MockProvider)(nil).GetDisks))
}

// GetKey mocks base method
func (m *MockProvider) GetKey(arg0 map[string]string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetKey", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// GetKey indicates an expected call of GetKey
func (mr *MockProviderMockRecorder) GetKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetKey", reflect.TypeOf((*MockProvider)(nil).GetKey), arg0)
}

// NodePricing mocks base method
func (m *MockProvider) NodePricing(arg0 string) (*cloud.Node, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NodePricing", arg0)
	ret0, _ := ret[0].(*cloud.Node)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NodePricing indicates an expected call of NodePricing
func (mr *MockProviderMockRecorder) NodePricing(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NodePricing", reflect.TypeOf((*MockProvider)(nil).NodePricing), arg0)
}

// QuerySQL mocks base method
func (m *MockProvider) QuerySQL(arg0 string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QuerySQL", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// QuerySQL indicates an expected call of QuerySQL
func (mr *MockProviderMockRecorder) QuerySQL(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QuerySQL", reflect.TypeOf((*MockProvider)(nil).QuerySQL), arg0)
}
